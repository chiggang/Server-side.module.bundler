!function(t){var E={};function _(T){if(E[T])return E[T].exports;var S=E[T]={i:T,l:!1,exports:{}};return t[T].call(S.exports,S,S.exports,_),S.l=!0,S.exports}_.m=t,_.c=E,_.d=function(t,E,T){_.o(t,E)||Object.defineProperty(t,E,{enumerable:!0,get:T})},_.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},_.t=function(t,E){if(1&E&&(t=_(t)),8&E)return t;if(4&E&&"object"==typeof t&&t&&t.__esModule)return t;var T=Object.create(null);if(_.r(T),Object.defineProperty(T,"default",{enumerable:!0,value:t}),2&E&&"string"!=typeof t)for(var S in t)_.d(T,S,function(E){return t[E]}.bind(null,S));return T},_.n=function(t){var E=t&&t.__esModule?function(){return t.default}:function(){return t};return _.d(E,"a",E),E},_.o=function(t,E){return Object.prototype.hasOwnProperty.call(t,E)},_.p="",_(_.s=2)}([function(t,E){t.exports=require("path")},function(t,E){t.exports={setLog:function(t,E,T){var S="";"Y"==E&&(S=_(new Date)+" "),console.log(S+t),"Y"==T&&console.log("")},getDateText:function(t){_(t)}};var _=function(t){return T(t.getFullYear(),4)+"."+T(t.getMonth()+1,2)+"."+T(t.getDate(),2)+" "+T(t.getHours(),2)+":"+T(t.getMinutes(),2)+":"+T(t.getSeconds(),2)},T=function(t,E){var _="";if((t=t.toString()).length<E)for(var T=0;T<E-t.length;T++)_+="0";return _+t}},function(t,E,_){var T=_(0),S=_(3)(),A=_(4),n=_(5),N=(_(6),_(7)),D=_(8),R=_(1),C={address:{},database:{}},L={};S.use(n.json()),S.use(n.urlencoded({extended:!0})),S.use(function(t,E,_,T){_.end(JSON.stringify({status:400,result:"error",message:"JSON 형식에 오류가 있거나 서버 오류일 수 있습니다.",data:null}))}),S.use(A({allowedHeaders:["sessionId","Content-Type"],exposedHeaders:["sessionId"],origin:"*",methods:"GET,HEAD,PUT,PATCH,POST,DELETE",preflightContinue:!1}));try{var O=D.readFileSync(T.join(__dirname,"json/address.config.json"),"utf8"),M=JSON.parse(O);C.address=M}catch(t){console.log("서버 JSON 파일 읽기에 실패하였습니다."),console.log(t)}try{var I=D.readFileSync(T.join(__dirname,"json/database.config.json"),"utf8"),U=JSON.parse(I);C.database=U}catch(t){console.log("Database JSON 파일 읽기에 실패하였습니다."),console.log(t)}try{var P=D.readFileSync(T.join(__dirname,"json/query.json"),"utf8");L=JSON.parse(P)}catch(t){console.log("Query JSON 파일 읽기에 실패하였습니다."),console.log(t)}var W=N(S.listen(C.address.socket.port,function(t){if(t)return R.setLog("[Error #SC-001] http.listen(): 소켓 서버를 시작할 수 없습니다.","Y","N"),void R.setLog("[Error #SC-001] http.listen(): "+t.stack,"Y","Y");R.setLog("[Log #SC-101] http.listen(): 소켓 서버를 시작하였습니다.","Y","N"),R.setLog("[Log #SC-101] http.listen(): Socket Port: "+C.address.socket.port,"Y","Y")})),e=(_(9)(S,W,{config:C,query:L},function(t){switch(t.callType){case"CraneState":setCraneData(t.data)}}),[]);W.on("connection",function(t){R.setLog("[Event] 사용자 접속: "+t.id,"Y","N"),W.to(t.id).emit("abc",{socketID:t.id}),W.to(t.id).emit("requireConnectionInfo",null),t.on("connectionInfo",function(E){E.socketId=t.id;try{e.push(E)}catch(t){}}),t.on("selectedPart",function(E){try{var _=e.filter(function(E){return"Main"===E.connectType&&E.socketId===t.id}),T=e.filter(function(t){return"MainDetailUnity"===t.connectType&&t.userSocketCode===_[0].userSocketCode});if(0==T.length)return;T=T[0],W.to(T.socketId).emit("selectedPart",E)}catch(t){}}),t.on("def",function(t){}),t.on("error",function(){R.setLog("[Error] Socket error: "+t.id,"Y","N")}),t.on("disconnect",function(){try{var E=e.filter(function(E){return E.socketId===t.id});if(0==E.length)return;E=E[0],e=e.filter(function(t){return t.userSocketCode!==E.userSocketCode})}catch(t){}R.setLog("[Event] 사용자 접속 해제: "+t.id,"Y","N")}),W.to(t.id).emit("StoW_ConnectedUser",{socketID:t.id})})},function(t,E){t.exports=require("express")},function(t,E){t.exports=require("cors")},function(t,E){t.exports=require("body-parser")},function(t,E){t.exports=require("cookie-parser")},function(t,E){t.exports=require("socket.io")},function(t,E){t.exports=require("fs")},function(t,E,_){_(0);var T=_(10),S=_(11);_(1);t.exports=function(t,E,A,n){_(12)("".concat(A.config.address.socket.url,":").concat(A.config.address.socket.port)),t.post("/api/set/crane_state",function(t,E){n({callType:"CraneState",data:t.body}),D("set",E,!0,null)}),t.post("/api/get/safe_point",function(t,E){N("C62A","\n\t\t\tSELECT\tA.CRT_DATE,\n\t\t\t\t\tSUBSTR(A.CRT_DATE, 5, 2) || '.' || SUBSTR(A.CRT_DATE, 7, 2) AS CRT_DATE_MD,\n\t\t\t\t\tA.BSNS_CD,\n\t\t\t\t\tA.BSNS_NM,\n\t\t\t\t\t'' AS PART_CD,\n\t\t\t\t\tA.BSNS_NM AS PART_NM,\n\t\t\t\t\tA.VAL\n\t\t\tFROM\tXS01.VSLI_BSNS_AC00 A\n\t\t\tINNER\tJOIN (\n\t\t\t\t\t\tSELECT\tCRT_DATE\n\t\t\t\t\t\tFROM\t(\n\t\t\t\t\t\t\t\t\tSELECT\tCRT_DATE\n\t\t\t\t\t\t\t\t\tFROM\tXS01.VSLI_BSNS_AC00\n\t\t\t\t\t\t\t\t\tWHERE\tVAL IS NOT NULL\n\t\t\t\t\t\t\t\t\tGROUP\tBY CRT_DATE\n\t\t\t\t\t\t\t\t\tORDER\tBY CRT_DATE DESC\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\tWHERE\tROWNUM = 1\n\t\t\t\t\t) B\n\t\t\t\t\tON A.CRT_DATE = B.CRT_DATE\n\t\t\tUNION\tALL\n\t\t\tSELECT\tA.CRT_DATE,\n\t\t\t\t\tSUBSTR(A.CRT_DATE, 5, 2) || '.' || SUBSTR(A.CRT_DATE, 7, 2) AS CRT_DATE_MD,\n\t\t\t\t\tA.BSNS_CD,\n\t\t\t\t\t'' AS BSNS_NM,\n\t\t\t\t\tA.PART_CD,\n\t\t\t\t\tA.PART_NM,\n\t\t\t\t\tA.VAL\n\t\t\tFROM\tXS01.VSLI_PART_AC00 A\n\t\t\tINNER\tJOIN (\n\t\t\t\t\t\tSELECT\tCRT_DATE\n\t\t\t\t\t\tFROM\t(\n\t\t\t\t\t\t\t\t\tSELECT\tCRT_DATE\n\t\t\t\t\t\t\t\t\tFROM\tXS01.VSLI_PART_AC00\n\t\t\t\t\t\t\t\t\tWHERE\tVAL IS NOT NULL\n\t\t\t\t\t\t\t\t\tGROUP\tBY CRT_DATE\n\t\t\t\t\t\t\t\t\tORDER\tBY CRT_DATE DESC\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\tWHERE\tROWNUM = 1\n\t\t\t\t\t) B\n\t\t\t\t\tON A.CRT_DATE = B.CRT_DATE\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/safe_point_detail",function(t,E){N("C62A","\n\t\t\tSELECT\t(POINT_RULE + POINT_ACCIDENT + POINT_EDUCATION + POINT_AWARD) AS SAFETY_IDX,\t/* 선행안전지수 총점 */\n\t\t\t\t\tPOINT_RULE,\t\t\t\t/* 안전수칙 */\n\t\t\t\t\tRULE_CABSOLUTE,\t\t\t/* 절대수칙 */\n\t\t\t\t\tRULE_CGENERAL,\t\t\t/* 일반수칙 */\n\t\t\t\t\tRULE_CSTOP_WORK,\t\t/* 작업중지 */\n\t\t\t\t\tRULE_CMUNICIPAL,\t\t/* 시정통보 */\n\t\t\t\t\tPOINT_ACCIDENT,\t\t\t/* 안전사고 */\n\t\t\t\t\tACCIDENT_CMINOR,\t\t/* 경미사고 건수 */\n\t\t\t\t\tACCIDENT_CSERIOUS,\t\t/* 중대사고 건수 */\n\t\t\t\t\tACCIDENT_CINDUSTRIAL,\t/* 산재사고 건수 */\n\t\t\t\t\tPOINT_EDUCATION,\t\t/* 안전교육 */\n\t\t\t\t\tPOINT_AWARD\t\t\t\t/* 개선활동 */\n\t\t\tFROM\t(\n\t\t\t\t\t\tSELECT\t*\n\t\t\t\t\t\tFROM\tXS01.VSLI_DEPT_AC00\n\t\t\t\t\t\tWHERE\tDEPT_CD = 'C550'\n\t\t\t\t\t\tORDER\tBY CRT_DATE DESC\n\t\t\t\t\t) \n\t\t\tWHERE\tROWNUM = 1\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/construct_state",function(t,E){N("C62A","\n\t\t\tSELECT\tDISTINCT GUBUN,\n\t\t\t\t\tSIGN_VAL_GBN,\n\t\t\t\t\tCOUNT(*) AS CNT\n\t\t\tFROM\tDTM_UA1002\n\t\t\tWHERE\tIN_DAT = TO_CHAR(SYSDATE, 'YYYYMMDD')\n\t\t\tGROUP\tBY GUBUN,\n\t\t\t\t\tSIGN_VAL_GBN\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/construct_detail",function(t,E){var _="\n\t\t\tSELECT\tIN_DAT,\n\t\t\t\t\tGUBUN,\n\t\t\t\t\tFIG_SHP,\n\t\t\t\t\tSUBSTR(ACT_COD, 1, 5) AS ITM_COD,\n\t\t\t\t\tACT_COD,\n\t\t\t\t\tACT_DES,\n\t\t\t\t\tPRE_ACT,\n\t\t\t\t\tPRE_ITM,\n\t\t\t\t\tAFT_ITM,\n\t\t\t\t\tDPT_COD,\n\t\t\t\t\tDPT_NM,\n\t\t\t\t\tMIS_COD,\n\t\t\t\t\tP3_BLK,\n\t\t\t\t\tP2_BLK,\n\t\t\t\t\tP1_BLK,\n\t\t\t\t\tPLN_ST,\n\t\t\t\t\tDECODE(PLN_ST, NULL, '', SUBSTR(PLN_ST, 1, 4) || '.' || SUBSTR(PLN_ST, 5, 2) || '.' || SUBSTR(PLN_ST, 7, 2)) AS PLN_ST_TEXT,\n\t\t\t\t\tPLN_FI,\n\t\t\t\t\tDECODE(PLN_FI, NULL, '', SUBSTR(PLN_FI, 1, 4) || '.' || SUBSTR(PLN_FI, 5, 2) || '.' || SUBSTR(PLN_FI, 7, 2)) AS PLN_FI_TEXT,\n\t\t\t\t\tEST_ST_PP,\n\t\t\t\t\tDECODE(EST_ST_PP, NULL, '', SUBSTR(EST_ST_PP, 1, 4) || '.' || SUBSTR(EST_ST_PP, 5, 2) || '.' || SUBSTR(EST_ST_PP, 7, 2)) AS EST_ST_PP_TEXT,\n\t\t\t\t\tEST_FI_PP,\n\t\t\t\t\tDECODE(EST_FI_PP, NULL, '', SUBSTR(EST_FI_PP, 1, 4) || '.' || SUBSTR(EST_FI_PP, 5, 2) || '.' || SUBSTR(EST_FI_PP, 7, 2)) AS EST_FI_PP_TEXT,\n\t\t\t\t\tFORECAST_ST,\n\t\t\t\t\tDECODE(FORECAST_ST, NULL, '', SUBSTR(FORECAST_ST, 1, 4) || '.' || SUBSTR(FORECAST_ST, 5, 2) || '.' || SUBSTR(FORECAST_ST, 7, 2)) AS FORECAST_ST_TEXT,\n\t\t\t\t\tFORECAST_FI,\n\t\t\t\t\tDECODE(FORECAST_FI, NULL, '', SUBSTR(FORECAST_FI, 1, 4) || '.' || SUBSTR(FORECAST_FI, 5, 2) || '.' || SUBSTR(FORECAST_FI, 7, 2)) AS FORECAST_FI_TEXT,\n\t\t\t\t\tRESULT_ST,\n\t\t\t\t\tDECODE(RESULT_ST, NULL, '', SUBSTR(RESULT_ST, 1, 4) || '.' || SUBSTR(RESULT_ST, 5, 2) || '.' || SUBSTR(RESULT_ST, 7, 2)) AS RESULT_ST_TEXT,\n\t\t\t\t\tRESULT_FI,\n\t\t\t\t\tDECODE(RESULT_FI, NULL, '', SUBSTR(RESULT_FI, 1, 4) || '.' || SUBSTR(RESULT_FI, 5, 2) || '.' || SUBSTR(RESULT_FI, 7, 2)) AS RESULT_FI_TEXT,\n\t\t\t\t\tMUL_WGT,\n\t\t\t\t\tSIGN_VAL,\n\t\t\t\t\tSIGN_VAL_GBN,\n\t\t\t\t\tDELAY_DATE,\n\t\t\t\t\tPE_SIGN_VAL,\n\t\t\t\t\tASS_SIGN_VAL,\n\t\t\t\t\tF21_SIGN_VAL,\n\t\t\t\t\tG41_SIGN_VAL,\n\t\t\t\t\tH32_SIGN_VAL,\n\t\t\t\t\tPRE_ACT_DES,\n\t\t\t\t\tPRE_RESULT_ST,\n\t\t\t\t\tPRE_RESULT_FI,\n\t\t\t\t\tPRE_DPT_COD,\n\t\t\t\t\tWRKCNTR,\n\t\t\t\t\tWRKCNTR_NM,\n\t\t\t\t\tSTATUS_STR\n\t\t\tFROM\tDTM_UA1002\n\t\t\tWHERE\tIN_DAT = TO_CHAR(SYSDATE, 'YYYYMMDD')\n\t\t\t\t\tAND GUBUN = '".concat(t.body.GUBUN,"'\n\t\t");N("C62A",_,function(t,_){D("get",E,t,_)})}),t.post("/api/get/success_point",function(t,E){N("C62A","\n\t\t\tSELECT\tGUBUN,\t\t\t\t\t\t/* 직영구분: O: 직영, X: 외주 */\n\t\t\t\t\tROUND(AVG(PERT), 0) AS PERT\t/* 합격율(월 평균) */\n\t\t\tFROM\tDTM_UA1003\n\t\t\tWHERE   SUBSTR(IN_DAT, 1, 6) = TO_CHAR(SYSDATE, 'YYYYMM')\n\t\t\tGROUP\tBY GUBUN\n\t\t\tORDER\tBY GUBUN\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/success_point_detail",function(t,E){N("C62A","\n\t\t\tSELECT\tA.IN_DAT,\n\t\t\t\t\tSUBSTR(A.IN_DAT, 1, 4) || '.' || SUBSTR(A.IN_DAT, 5, 2) AS IN_DAT_YM,\n\t\t\t\t\tSUBSTR(A.IN_DAT, 5, 2) AS IN_DAT_M,\n\t\t\t\t\tDECODE(B.PERT, NULL, 0, B.PERT) AS PERT\t\t/* 합격율(월 평균) */\n\t\t\tFROM\t(\n\t\t\t\t\t\tSELECT\tTO_CHAR(SYSDATE, 'YYYY') || LPAD(LEVEL, 2, 0) AS IN_DAT\n\t\t\t\t\t\tFROM\tDUAL\n\t\t\t\t\t\tCONNECT\tBY LEVEL <= 12\n\t\t\t\t\t) A\n\t\t\tLEFT\tOUTER JOIN (\n\t\t\t\t\t\tSELECT\tSUBSTR(IN_DAT, 1, 6) AS IN_DAT,\n\t\t\t\t\t\t\t\tROUND(AVG(PERT), 2) AS PERT\n\t\t\t\t\t\tFROM\tDTM_UA1003\n\t\t\t\t\t\tWHERE   SUBSTR(IN_DAT, 1, 4) = TO_CHAR(SYSDATE, 'YYYY')\n\t\t\t\t\t\tGROUP\tBY SUBSTR(IN_DAT, 1, 6)\n\t\t\t\t\t\tORDER\tBY IN_DAT\n\t\t\t\t\t) B\n\t\t\t\t\tON A.IN_DAT = B.IN_DAT\n\t\t\tORDER\tBY A.IN_DAT\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/line_qc_eval_point",function(t,E){var _="\n\t\t\twith sum_data as (\n\t\t\t\tselect a.department, a.dept_cd, a.sect_cd, a.applicant, a.applicant_empno,\n\t\t\t\t\t\tsum(insp_cnt_r) as insp_cnt_r,\n\t\t\t\t\t\tsum(insp_cnt) as insp_cnt,\n\t\t\t\t\t\tsum(visible_check_cnt) as visible_check_cnt,\n\t\t\t\t\t\tsum(i1_1) as i1_1,\n\t\t\t\t\t\tsum(i1_2) as i1_2,\n\t\t\t\t\t\tsum(i2) as i2,\n\t\t\t\t\t\tsum(i3) as i3,\n\t\t\t\t\t\tsum(i4) as i4,\n\t\t\t\t\t\tSUM(A.I6) AS I6,\n\t\t\t\t\t\tSUM(A.I6_RPW) AS I6_RPW,\n\t\t\t\t\t\tSUM(A.I6_CDI) AS I6_CDI,\n\t\t\t\t\t\tSUM(A.I6_ACI) AS I6_ACI,\n\t\t\t\t\t\tSUM(A.I6_AMD) AS I6_AMD,\n\t\t\t\t\t\tSUM(A.I6_ROD) AS I6_ROD,\n\t\t\t\t\t\tSUM(A.I6_ACO) AS I6_ACO,\n\t\t\t\t\t\tSUM(A.BASIC_CNT) AS BASIC_CNT,\n\t\t\t\t\t\tSUM(A.I6_A_R_CDI) AS I6_A_R_CDI,\n\t\t\t\t\t\tsum(m1) as m1,\n\t\t\t\t\t\tsum(cmt_h_cnt) as cmt_h_cnt,\n\t\t\t\t\t\tsum(cmt_f_cnt) as cmt_f_cnt,\n\t\t\t\t\t\tsum(cmt_p_cnt) as cmt_p_cnt\n\t\t\t\tfrom TQM_MNGT085_STORE_01 a\n\t\t\t\tinner join TQM_MNGT085_STORE_02 b\n\t\t\t\ton a.applicant = b.applicant\n\t\t\t\tand nvl(a.applicant_empno,' ') = nvl(b.applicant_empno, ' ')\n\t\t\t\tand a.real_day = b.real_day\n\t\t\t\tand nvl(a.key,' ') = nvl(b.key,' ')\n\t\t\t\tand a.real_day >= TO_CHAR(SYSDATE,'YYYYMM') || '01'\n\t\t\t\tand a.real_day <= TO_CHAR(SYSDATE,'YYYYMMDD')\n\t\t\t\twhere 1=1\n\t\t\t\tAND A.KEY IN (\n\t\t\t\tSELECT TRIM(REGEXP_SUBSTR('".concat(t.body.IN_TYPE,"','[^,]+', 1, LEVEL)) FROM DUAL\n\t\t\t\tCONNECT BY REGEXP_SUBSTR('").concat(t.body.IN_TYPE,"', '[^,]+', 1, LEVEL) IS NOT NULL\n\t\t\t\t\t\t)\n\t\t\t\tand a.real_day >= TO_CHAR(SYSDATE,'YYYYMM') || '01'\n\t\t\t\tand a.real_day <= TO_CHAR(SYSDATE,'YYYYMM') || '31'\n\t\t\t\tgroup by a.department, a.dept_cd, a.sect_cd, a.applicant, a.applicant_empno\n\t\t\t), temp_data0 as (\n\t\t\t\tSELECT APPLICANT, APPLICANT_EMPNO, DEPARTMENT, SECT_CD,\n\t\t\t\tsum(insp_cnt_r) as insp_cnt_r,\n\t\t\t\tsum(insp_cnt) as insp_cnt,\n\t\t\t\tsum(visible_check_cnt) as visible_check_cnt,\n\t\t\t\tsum(i1_1) as i1_1,\n\t\t\t\tsum(i1_2) as i1_2,\n\t\t\t\tsum(i2) as i2,\n\t\t\t\tsum(i3) as i3,\n\t\t\t\tsum(i4) as i4,\n\t\n\t\t\t\t/* 선주불만족도 추가 I6 2018.07.11 */\n\t\t\t\t/* 선주불만족도 SUMMURY 계산을 위한 개별 합계 수량 필요 */\n\t\t\t\tSUM(B.I6) AS I6,\n\t\t\t\tSUM(B.I6_RPW) AS I6_RPW,\n\t\t\t\tSUM(B.I6_CDI) AS I6_CDI,\n\t\t\t\tSUM(B.I6_ACI) AS I6_ACI,\n\t\t\t\tSUM(B.I6_AMD) AS I6_AMD,\n\t\t\t\tSUM(B.I6_ROD) AS I6_ROD,\n\t\t\t\tSUM(B.I6_ACO) AS I6_ACO,\n\t\t\t\tSUM(B.BASIC_CNT) AS BASIC_CNT,\n\t\t\t\tSUM(B.I6_A_R_CDI) AS I6_A_R_CDI,\n\t\n\t\t\t\tsum(m1) as m1,\n\t\t\t\tsum(cmt_h_cnt) as cmt_h_cnt,\n\t\t\t\tsum(cmt_f_cnt) as cmt_f_cnt,\n\t\t\t\tsum(cmt_p_cnt) as cmt_p_cnt\n\t\t\t\tFROM sum_data b\n\t\t\t\tGROUP BY APPLICANT, APPLICANT_EMPNO, DEPARTMENT, SECT_CD\n\t\t\t), temp_data1 as (\n\t\t\tselect\n\t\t\t\tA.DEPT_CODE, A.INOUT, \n\t\t\t\tA.SECT_CD, A.SECT_USER_CD,\n\t\t\t\tA.TEAM_CD, A.TEAM_USER_CD, A.USER_ID, A.NAME,\n\t\t\t\tPKG_CQM003_MNGT_COM.FN_GET_TYPE_BY_DEPT_CD_2(A.DEPT_CODE) AS DEPT_TYPE,\n\t\t\t\tMAX(A.SECT_NM) AS SECT_NM,\n\t\t\t\tMAX(A.SECT_USER_NM) AS SECT_USER_NM,\n\t\t\t\tMAX(A.DEPT_NAME) AS DEPT_NAME,\n\t\t\t\tMAX(A.INOUT_NM) AS INOUT_NM,\n\t\t\t\tMAX(A.TEAM_NM) AS TEAM_NM,\n\t\t\t\tMAX(A.TEAM_USER_NM) AS TEAM_USER_NM,\n\t\t\t\tsum(insp_cnt_r) as insp_cnt_r,\n\t\t\t\tsum(insp_cnt) as insp_cnt,\n\t\t\t\tsum(visible_check_cnt) as visible_check_cnt,\n\t\t\t\tsum(i1_1) as i1_1,\n\t\t\t\tsum(i1_2) as i1_2,\n\t\t\t\tsum(i2) as i2,\n\t\t\t\tsum(i3) as i3,\n\t\t\t\tsum(i4) as i4,\n\n\t\t\t\t/* 선주불만족도 추가 I6 2018.07.11 */\n\t\t\t\tSUM(B.I6)     AS I6_AR,\n\t\t\t\tSUM(B.I6_RPW) AS I6_RPW,\n\t\t\t\tSUM(B.I6_CDI) AS I6_CDI,\n\t\t\t\tSUM(B.I6_ACI) AS I6_ACI,\n\t\t\t\tSUM(B.I6_AMD) AS I6_AMD,\n\t\t\t\tSUM(B.I6_ROD) AS I6_ROD,\n\t\t\t\tSUM(B.I6_ACO) AS I6_ACO,\n\t\t\t\tSUM(B.I6_A_R_CDI) AS I6_A_R_CDI,\n\n\t\t\t\tCASE WHEN SUM(B.I6) > 0\n\t\t\t\t\tTHEN ROUND(((SUM(B.I6_RPW) * 1.2) +\n\t\t\t\t\t\t\t\t\t\t(SUM(B.I6_CDI) * 0.7) +\n\t\t\t\t\t\t\t\t\t\t(SUM(B.I6_ACI) * 0.5) +\n\t\t\t\t\t\t\t\t\t\t(SUM(B.I6_AMD) * 0.3) +\n\t\t\t\t\t\t\t\t\t\t(SUM(B.I6_ROD) * 0.2) +\n\t\t\t\t\t\t\t\t\t\t(SUM(B.I6_ACO) * 0.1) ) / SUM(B.I6_A_R_CDI) * 100, 1)\n\t\t\t\tELSE 0 END AS I6, /* 선주불만족도 % */\n\n\t\t\tsum(m1) as m1,\n\n\t\t\t\t0 AS F1, /*  검사코멘트 건수 사용안함 2018.07.11 */\n\t\t\t\t0 AS B1, /*  검사코멘트 건수 사용안함 2018.07.11 */\n\t\t\t\t0 AS C1, /*  검사코멘트 건수 사용안함 2018.07.11 */\n\n\t\t\t/* 기초품질 로직 수정 2018.07.11 */\n\t\t\t\tNVL(SUM(B.BASIC_CNT),0) AS F2, /* 기초품질 건수 */\n\t\t\t\t0 AS B2, /* 검사코멘트 건수 사용안함 2018.07.11 */\n\t\t\t\t0 AS C2,  /* 검사코멘트 건수 사용안함 2018.07.11 */\n\t\t\t\t''\n\t\t\tfrom TQM_MNGT085_STORE_LAYOUT  a\n\t\t\tINNER JOIN temp_data0 B\n\t\t\t\tON B.APPLICANT = A.NAME\n\t\t\t\t/* 2018.03.07 : LQC 부서와 검사데이터 신청부서가 다를경우 JOIN이 안됨. <- 사번으로 묶기일경우 부서를 무시하고 사번으로 묶도록 변경 */\n\t\t\t\tAND ('").concat(t.body.V_CHECK_EMP_NO,"' = 'Y' OR\n\t\t\t\t\t(\n\t\t\t\t\t\tCASE WHEN A.INOUT = 'O' AND B.DEPARTMENT = A.TEAM_USER_CD THEN 1\n\t\t\t\t\t\t\tWHEN A.INOUT = 'I' AND SUBSTR(B.SECT_CD,1,3)||'000' = SUBSTR(A.DEPT_CODE,1,3)||'000'  THEN 1\n\t\t\t\t\t\tELSE 0\n\t\t\t\t\t\tEND = 1\n\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\tAND ('").concat(t.body.V_CHECK_EMP_NO,"' <> 'Y' OR B.APPLICANT_EMPNO = A.USER_ID)\n\t\t\tWHERE 1=1\n\t\t\t\tAND ('").concat(t.body.IN_DEPT,"' IS NULL OR SUBSTR(A.DEPT_CODE,1,3)||'0' IN (SELECT TRIM(COLUMN_VALUE) FROM TABLE(PKG_CQM003_MNGT_COM.FN_GET_SPLITED_TB('").concat(t.body.IN_DEPT,"'))))\n\t\t\tgroup by A.DEPT_CODE, A.INOUT, A.SECT_CD, A.SECT_USER_CD, A.TEAM_CD, A.TEAM_USER_CD, A.USER_ID, A.NAME, PKG_CQM003_MNGT_COM.FN_GET_TYPE_BY_DEPT_CD_2(A.DEPT_CODE)\n\t\t\t)\n\t\t\t, TEMP_DATA2 AS (\n\t\t\t\t\tSELECT A.DEPT_CODE,A.DEPT_NAME,A.DEPT_TYPE,A.INOUT,A.INOUT_NM,A.SECT_CD,A.SECT_NM,A.SECT_USER_CD,A.SECT_USER_NM,A.TEAM_CD,A.TEAM_NM,A.TEAM_USER_CD,A.TEAM_USER_NM,A.USER_ID,A.NAME,\n\t\t\t\t\t\t\tVISIBLE_CHECK_CNT,\n\t\t\t\t\t\t\tINSP_CNT,INSP_CNT_R,\n\t\t\t\t\t\t\tI1_1 AS R1,\n\t\t\t\t\t\t\tI1_2 AS R2,\n\t\t\t\t\t\t\tI2   AS R3,\n\t\t\t\t\t\t\tI3   AS R4,\n\t\t\t\t\t\t\tI4   AS R5,\n\t\t\t\t\t\t\tM1   AS M1,\n\t\n\t\t\t\t\t\t\tI6_AR,\n\t\t\t\t\t\t\tI6_RPW,\n\t\t\t\t\t\t\t\t\t\t\t\t\tI6_CDI,\n\t\t\t\t\t\t\t\t\t\t\t\t\tI6_ACI,\n\t\t\t\t\t\t\t\t\t\t\t\t\tI6_AMD,\n\t\t\t\t\t\t\t\t\t\t\t\t\tI6_ROD,\n\t\t\t\t\t\t\t\t\t\t\t\t\tI6_ACO,\n\t\t\t\t\t\t\t\t\t\t\t\t\tI6_A_R_CDI,\n\t\n\t\t\t\t\t\t\t/* 입회 */\n\t\t\t\t\t\t\tCASE WHEN I1_2 > 0 THEN ROUND((I1_1 / I1_2 * 100),1)\n\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\tEND I1_1,\n\t\t\t\t\t\t\tCASE WHEN I1_2 > 0 THEN ROUND((I1_1 / I1_2 * 40),1)\n\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\tEND I1_2,\n\t\n\t\t\t\t\t\t\t/* 1차검사 CLEAN 합격율이 있을 때만 표기 2018.08.22 */\n\t\t\t\t\t\t\tCASE WHEN (I1_2 > 0 AND INSP_CNT > 0) THEN ROUND((I2 / INSP_CNT * 100),1)\n\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\tEND I2_1,\n\t\t\t\t\t\t\tCASE WHEN (I1_2 > 0 AND INSP_CNT > 0) THEN ROUND((100 - (I2 / INSP_CNT * 100))/100*30,1)\n\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\tEND I2_2,\n\t\n\t\t\t\t\t\t\tCASE WHEN M1 > 0 THEN ROUND(((M1-I3) / M1 * 100),1)\n\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\tEND I3_1,\n\t\t\t\t\t\t\tCASE WHEN M1 > 0 THEN ROUND(((M1-I3) / M1 * 100 / 10),1)\n\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\tEND I3_2,\n\t\n\t\t\t\t\t\t\t/* 1차검사 CLEAN 합격율이 있을 때만 표기 2018.08.22 */\n\t\t\t\t\t\t\tCASE WHEN (I1_2 > 0 AND M1 > 0) THEN ROUND(((M1-I4) / M1 * 100),1)\n\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\tEND I4_1,\n\t\t\t\t\t\t\tCASE WHEN (I1_2 > 0 AND M1 > 0) THEN ROUND(((M1-I4) / M1 * 100 / 10),1)\n\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\tEND I4_2,\n\t\n\t\t\t\t\t\t\t/* 1차검사 CLEAN 합격율이 있을 때만 표기 2018.08.22 */\n\t\t\t\t\t\t\t\t\t\t\t\tCASE WHEN (I1_2 > 0 AND INSP_CNT > 0) THEN I6\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\t\t\t\t\t\tEND AS I6_1, /* 선주불만족도 % */\n\t\t\t\t\t\t\t\t\t\t\t\tCASE WHEN (I1_2 > 0 AND INSP_CNT > 0) THEN ( CASE WHEN 10 - I6 > 0 THEN 10 - I6 ELSE 0 END )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE 0\n\t\t\t\t\t\t\t\t\t\t\t\tEND AS I6_2, /* 선주불만족도 점수 추가 2018.07.11 */\n\t\t\t\t\t\t\t\t\t\t\t\t/*  검사 CMT삭제, 기초품질점수 환산 로직 수정 2018.07.11 */\n\t\t\t\t\t\t\t\t\t\t\t\t0 AS F1_1,\n\t\t\t\t\t\t\t\t\t\t\t\t0 AS F1_2,\n\t\t\t\t\t\t\t\t\t\t\t\tF2 AS F2_1,\n\t\t\t\t\t\t\t\t\t\t\tCASE WHEN (10 - (F2*0.5)) < 0 THEN 0 ELSE 10 - (F2*0.5) END AS F2_2, /* 기초품질점수 환산 로직 수정 2018.07.11 */\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t0 AS B1_1,\n\t\t\t\t\t\t\t\t\t\t\t\t0 AS B1_2,\n\t\t\t\t\t\t\t\t\t\t\t\t0 AS B2_1,\n\t\t\t\t\t\t\t\t\t\t\t\t0 AS B2_2,\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t0 AS C1_1,\n\t\t\t\t\t\t\t\t\t\t\t\t0 AS C1_2,\n\t\t\t\t\t\t\t\t\t\t\t\t0 AS C2_1,\n\t\t\t\t\t\t\t\t\t\t\t\t0 AS C2_2\n\t\t\t\t\tFROM TEMP_DATA1 A\n\t\t\t\t)\n\t\t\t\tSELECT\tA.DEPT_CODE,\n\t\t\t\t\t\tA.DEPT_NAME,\n\t\t\t\t\t\tA.DEPT_TYPE,\n\t\t\t\t\t\tA.INOUT,\n\t\t\t\t\t\tA.INOUT_NM,\n\t\t\t\t\t\tA.SECT_CD,\n\t\t\t\t\t\tA.SECT_NM,\n\t\t\t\t\t\tA.SECT_USER_CD,\n\t\t\t\t\t\tA.SECT_USER_NM,\n\t\t\t\t\t\tA.TEAM_CD,\n\t\t\t\t\t\tA.TEAM_NM,\n\t\t\t\t\t\tA.TEAM_USER_CD,\n\t\t\t\t\t\tA.TEAM_USER_NM,\n\t\t\t\t\t\tA.USER_ID,\n\t\t\t\t\t\tA.NAME,\n\t\t\t\t\t\tA.VISIBLE_CHECK_CNT,\n\t\t\t\t\t\tA.INSP_CNT,\n\t\t\t\t\t\tA.INSP_CNT_R,\n\t\t\t\t\t\tA.R1,\n\t\t\t\t\t\tA.R2,\n\t\t\t\t\t\tA.R3,\n\t\t\t\t\t\tA.R4,\n\t\t\t\t\t\tA.R5,\n\t\t\t\t\t\tA.M1,\n\t\t\t\t\t\tA.I6_AR,\n\t\t\t\t\t\tA.I6_RPW,\n\t\t\t\t\t\tA.I6_CDI,\n\t\t\t\t\t\tA.I6_ACI,\n\t\t\t\t\t\tA.I6_AMD,\n\t\t\t\t\t\tA.I6_ROD,\n\t\t\t\t\t\tA.I6_ACO,\n\t\t\t\t\t\tA.I6_A_R_CDI,\n\t\t\t\t\t\tROUND(A.I1_1) AS I1_1,\n\t\t\t\t\t\tROUND(A.I1_2) AS I1_2,\n\t\t\t\t\t\tROUND(A.I2_1) AS I2_1,\n\t\t\t\t\t\tROUND(A.I2_2) AS I2_2,\n\t\t\t\t\t\tROUND(A.I3_1) AS I3_1,\n\t\t\t\t\t\tROUND(A.I3_2) AS I3_2,\n\t\t\t\t\t\tROUND(A.I4_1) AS I4_1,\n\t\t\t\t\t\tROUND(A.I4_2) AS I4_2,\n\t\t\t\t\t\tROUND(A.I6_1) AS I6_1,\n\t\t\t\t\t\tROUND(A.I6_2) AS I6_2,\n\t\t\t\t\t\tROUND(A.F1_1) AS F1_1,\n\t\t\t\t\t\tROUND(A.F1_2) AS F1_2,\n\t\t\t\t\t\tROUND(A.F2_1) AS F2_1,\n\t\t\t\t\t\tROUND(A.F2_2) AS F2_2,\n\t\t\t\t\t\tROUND(A.B1_1) AS B1_1,\n\t\t\t\t\t\tROUND(A.B1_2) AS B1_2,\n\t\t\t\t\t\tROUND(A.B2_1) AS B2_1,\n\t\t\t\t\t\tROUND(A.B2_2) AS B2_2,\n\t\t\t\t\t\tROUND(A.C1_1) AS C1_1,\n\t\t\t\t\t\tROUND(A.C1_2) AS C1_2,\n\t\t\t\t\t\tROUND(A.C2_1) AS C2_1,\n\t\t\t\t\t\tROUND(A.C2_2) AS C2_2,\n\t\t\t\t\t\tROUND(I1_2 + I2_2 + I3_2 + I4_2) AS I5,\n\t\t\t\t\t\tROUND(F1_2 + F2_2) AS FT,\n\t\t\t\t\t\tROUND(B1_2 + B2_2) AS BT,\n\t\t\t\t\t\tROUND(C1_2 + C2_2) AS CT,\n\t\t\t\t\t\tROUND(NVL(I1_2,0) + NVL(I2_2,0) + NVL(I4_2,0) + NVL(I6_2,0) + NVL(F1_2,0) + NVL(F2_2,0) + NVL(B1_2,0) + NVL(B2_2,0) + NVL(C1_2,0) + NVL(C2_2,0)) AS TT\n\t\t\t\t\tFROM TEMP_DATA2 A\n\t\t\t\tWHERE 1=1\n\t\t\t\t\tAND (NVL('").concat(t.body.IN_DISPLAY_ALL_YN,"','N') = 'Y' OR A.VISIBLE_CHECK_CNT > 0 OR F2_1 > 0) /* 검사건수 없고, 기초품질건만 있는 것도 나오도록 2018.07.11 */\n\t\t");N("C62A",_,function(t,_){D("get",E,t,_)})}),t.post("/api/get/day_success_point",function(t,E){var _="\n\t\t\tSELECT\tIN_DAT,\t\t\t\t\t/* 집계일자 */\n\t\t\t\t\tSUBSTR(IN_DAT, 5, 2) || '.' || SUBSTR(IN_DAT, 7, 2) AS IN_DAT_MD,\t/* 집계일자(월일) */\n\t\t\t\t\tSUM(PERT_O) AS PERT_O,\t/* 직영 합격율 */\n\t\t\t\t\tSUM(PERT_X) AS PERT_X\t/* 외주 합격율 */\n\t\t\tFROM\t(\n\t\t\t\t\t\tSELECT\tIN_DAT,\n\t\t\t\t\t\t\t\tDECODE(GUBUN, 'O', PERT, 0) AS PERT_O,\n\t\t\t\t\t\t\t\tDECODE(GUBUN, 'X', PERT, 0) AS PERT_X /* 외주 합격율 */\n\t\t\t\t\t\tFROM\tDTM_UA1003\n\t\t\t\t\t\tWHERE\tDPT_COD = 'C550'\n\t\t\t\t\t\t\t\tAND ROWNUM <= (".concat(t.body.days," * 2)\n\t\t\t\t\t\tORDER\tBY IN_DAT DESC\n\t\t\t\t\t)\n\t\t\tGROUP   BY IN_DAT\n\t\t\tORDER\tBY IN_DAT\n\t\t");N("C62A",_,function(t,_){D("get",E,t,_)})}),t.post("/api/get/do_work_plan",function(t,E){N("ERPUSER","\n\t\t\tSELECT\tDT,\n\t\t\t\t\tSUBSTR(DT, 5, 2) || '.' || SUBSTR(DT, 7, 2) AS DT_MD,\n\t\t\t\t\tSUM(TM_SKID1) AS TM_SKID1,\n\t\t\t\t\tSUM(TM_SKID2) AS TM_SKID2,\n\t\t\t\t\tSUM(TM_JL1) AS TM_JL1,\n\t\t\t\t\tSUM(TM_JJ1) AS TM_JJ1,\n\t\t\t\t\tSUM(TM_JJ2) AS TM_JJ2,\n\t\t\t\t\tSUM(TM_JJ3) AS TM_JJ3,\n\t\t\t\t\tSUM(TM_FIX1) AS TM_FIX1,\n\t\t\t\t\tSUM(TM_FIX2) AS TM_FIX2\n\t\t\tFROM\t(\n\t\t\t\t\t\tSELECT\tWD AS DT,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'SKID1팀', PLAN_PERC, 0) AS TM_SKID1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'SKID2팀', PLAN_PERC, 0) AS TM_SKID2,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '조립1팀', PLAN_PERC, 0) AS TM_JL1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조1팀', PLAN_PERC, 0) AS TM_JJ1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조2팀', PLAN_PERC, 0) AS TM_JJ2,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조3팀', PLAN_PERC, 0) AS TM_JJ3,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'FIX1팀', PLAN_PERC, 0) AS TM_FIX1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'FIX2팀', PLAN_PERC, 0) AS TM_FIX2\n\t\t\t\t\t\tFROM\tDTM_UA1004\n\t\t\t\t\t\tWHERE\tWD = TO_CHAR(SYSDATE, 'YYYYMMDD')\n\t\t\t\t\t)\n\t\t\tGROUP\tBY DT\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/work_perform",function(t,E){N("ERPUSER","\n\t\t\tSELECT\tDT,\n\t\t\t\t\tSUBSTR(DT, 5, 2) || '.' || SUBSTR(DT, 7, 2) AS DT_MD,\n\t\t\t\t\tSUM(TM_SKID1) AS TM_SKID1,\n\t\t\t\t\tSUM(TM_SKID2) AS TM_SKID2,\n\t\t\t\t\tSUM(TM_JL1) AS TM_JL1,\n\t\t\t\t\tSUM(TM_JJ1) AS TM_JJ1,\n\t\t\t\t\tSUM(TM_JJ2) AS TM_JJ2,\n\t\t\t\t\tSUM(TM_JJ3) AS TM_JJ3,\n\t\t\t\t\tSUM(TM_FIX1) AS TM_FIX1,\n\t\t\t\t\tSUM(TM_FIX2) AS TM_FIX2\n\t\t\tFROM\t(\n\t\t\t\t\t\tSELECT\tWD AS DT,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'SKID1팀', EXEC_PERC, 0) AS TM_SKID1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'SKID2팀', EXEC_PERC, 0) AS TM_SKID2,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '조립1팀', EXEC_PERC, 0) AS TM_JL1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조1팀', EXEC_PERC, 0) AS TM_JJ1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조2팀', EXEC_PERC, 0) AS TM_JJ2,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조3팀', EXEC_PERC, 0) AS TM_JJ3,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'FIX1팀', EXEC_PERC, 0) AS TM_FIX1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'FIX2팀', EXEC_PERC, 0) AS TM_FIX2\n\t\t\t\t\t\tFROM\tDTM_UA1004\n\t\t\t\t\t\tWHERE\tWD = TO_CHAR(SYSDATE - 1, 'YYYYMMDD')\n\t\t\t\t\t)\n\t\t\tGROUP\tBY DT\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/do_week_plan",function(t,E){N("ERPUSER","\n\t\t\tSELECT\tDT,\n\t\t\t\t\tSUBSTR(DT, 5, 2) || '.' || SUBSTR(DT, 7, 2) AS DT_MD,\n\t\t\t\t\tSUM(TM_SKID1) AS TM_SKID1,\n\t\t\t\t\tSUM(TM_SKID2) AS TM_SKID2,\n\t\t\t\t\tSUM(TM_JL1) AS TM_JL1,\n\t\t\t\t\tSUM(TM_JJ1) AS TM_JJ1,\n\t\t\t\t\tSUM(TM_JJ2) AS TM_JJ2,\n\t\t\t\t\tSUM(TM_JJ3) AS TM_JJ3,\n\t\t\t\t\tSUM(TM_FIX1) AS TM_FIX1,\n\t\t\t\t\tSUM(TM_FIX2) AS TM_FIX2\n\t\t\tFROM\t(\n\t\t\t\t\t\tSELECT\tWD AS DT,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'SKID1팀', PLAN_PERC, 0) AS TM_SKID1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'SKID2팀', PLAN_PERC, 0) AS TM_SKID2,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '조립1팀', PLAN_PERC, 0) AS TM_JL1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조1팀', PLAN_PERC, 0) AS TM_JJ1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조2팀', PLAN_PERC, 0) AS TM_JJ2,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조3팀', PLAN_PERC, 0) AS TM_JJ3,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'FIX1팀', PLAN_PERC, 0) AS TM_FIX1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'FIX2팀', PLAN_PERC, 0) AS TM_FIX2\n\t\t\t\t\t\tFROM\tDTM_UA1004\n\t\t\t\t\t\tWHERE\tWD >= TO_CHAR(SYSDATE - 7, 'YYYYMMDD')\n\t\t\t\t\t\t\t\tAND WD <= TO_CHAR(SYSDATE, 'YYYYMMDD')\n\t\t\t\t\t\t\t\tAND TO_CHAR(TO_DATE(WD, 'YYYYMMDD'), 'D') <> '1'\n\t\t\t\t\t)\n\t\t\tGROUP\tBY DT\n\t\t\tORDER\tBY DT\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/do_week_work",function(t,E){N("ERPUSER","\n\t\t\tSELECT\tDT,\n\t\t\t\t\tSUBSTR(DT, 5, 2) || '.' || SUBSTR(DT, 7, 2) AS DT_MD,\n\t\t\t\t\tSUM(TM_SKID1) AS TM_SKID1,\n\t\t\t\t\tSUM(TM_SKID2) AS TM_SKID2,\n\t\t\t\t\tSUM(TM_JL1) AS TM_JL1,\n\t\t\t\t\tSUM(TM_JJ1) AS TM_JJ1,\n\t\t\t\t\tSUM(TM_JJ2) AS TM_JJ2,\n\t\t\t\t\tSUM(TM_JJ3) AS TM_JJ3,\n\t\t\t\t\tSUM(TM_FIX1) AS TM_FIX1,\n\t\t\t\t\tSUM(TM_FIX2) AS TM_FIX2\n\t\t\tFROM\t(\n\t\t\t\t\t\tSELECT\tWD AS DT,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'SKID1팀', EXEC_PERC, 0) AS TM_SKID1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'SKID2팀', EXEC_PERC, 0) AS TM_SKID2,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '조립1팀', EXEC_PERC, 0) AS TM_JL1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조1팀', EXEC_PERC, 0) AS TM_JJ1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조2팀', EXEC_PERC, 0) AS TM_JJ2,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), '중조3팀', EXEC_PERC, 0) AS TM_JJ3,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'FIX1팀', EXEC_PERC, 0) AS TM_FIX1,\n\t\t\t\t\t\t\t\tDECODE(REPLACE(TEAM_NM, ' ', ''), 'FIX2팀', EXEC_PERC, 0) AS TM_FIX2\n\t\t\t\t\t\tFROM\tDTM_UA1004\n\t\t\t\t\t\tWHERE\tWD >= TO_CHAR(SYSDATE - 7, 'YYYYMMDD')\n\t\t\t\t\t\t\t\tAND WD <= TO_CHAR(SYSDATE, 'YYYYMMDD')\n\t\t\t\t\t\t\t\tAND TO_CHAR(TO_DATE(WD, 'YYYYMMDD'), 'D') <> '1'\n\t\t\t\t\t)\n\t\t\tGROUP\tBY DT\n\t\t\tORDER\tBY DT\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/block",function(t,E){N("C62A","\n\t\t\tSELECT\tA.JBN_DIS,\t\t\t\t/* 부서코드 */\n\t\t\t\t\tA.FIG_SHP,\t\t\t\t/* 호선 */\n\t\t\t\t\tA.ITM_COD,\t\t\t\t/* 블록 */\n\t\t\t\t\tA.ACT_COD,\t\t\t\t/* ITEM UNIQUE 정보 (호선+블록+공정+공종) */\n\t\t\t\t\tA.OUT_DUR,\t\t\t\t/* 반출공기 */\n\t\t\t\t\tA.WRKCNTR_NAME,\t\t\t/* 작업팀명 */\n\t\t\t\t\tA.WRKCNTR,\t\t\t\t/* 작업팀코드 */\n\t\t\t\t\tA.SEQ_NO,\t\t\t\t/* 분할정보 */\n\t\t\t\t\tA.JBN_N_X,\t\t\t\t/* X좌표 */\n\t\t\t\t\tA.JBN_N_Y,\t\t\t\t/* Y좌표 */\n\t\t\t\t\tA.ROT_ANG2,\t\t\t\t/* 회전값(메트릭스와 별개로 사용자가 회전시킨 값) */\n\t\t\t\t\tDECODE(A.JBN_ST, NULL, ' ', A.JBN_ST) AS JBN_ST,\t\t\t\t\t/* 배치시작일 */\n\t\t\t\t\tDECODE(A.JBN_FI, NULL, ' ', A.JBN_FI) AS JBN_FI,\t\t\t\t\t/* 배치종료일 */\n\t\t\t\t\tDECODE(A.UNI_STG, NULL, ' ', A.UNI_STG) AS UNI_STG,\t\t\t\t\t/* 정반코드 */\n\t\t\t\t\tDECODE(B.METRIX, NULL, ' ', B.METRIX) AS METRIX,\t\t\t\t\t/* 메트릭스 */\n\t\t\t\t\tDECODE(A.PLAN_SIGN_VAL, NULL, 0, A.PLAN_SIGN_VAL) AS PLAN_SIGN_VAL, /* 버퍼침투일 */\n\t\t\t\t\tDECODE(A.BLK_TOP, NULL, 0, A.BLK_TOP) AS BLK_TOP,\t\t\t\t\t/* 조립블록 탑재율 */\n\t\t\t\t\tDECODE(A.BLK_TRACE, NULL, 0, A.BLK_TRACE) AS BLK_TRACE,\t\t\t\t/* 부재투입율 */\n\t\t\t\t\tDECODE(A.EST_ST_PP, NULL, ' ', A.EST_ST_PP) AS EST_ST_PP,\t\t\t/* 실행계획착수일(또는 A.EST_ST_PP) */\n\t\t            DECODE(C.NET_ST_PP, NULL, ' ', C.NET_ST_PP) AS NET_ST_PP,\t\t\t/* 실행계획착수일(또는 A.EST_ST_PP) */\n\t\t\t\t\tA.PP_PLAN,\t\t\t\t/* 중일정 계획일정(또는 A.EST_ST_PP) */\n\t\t\t\t\t0 AS BLOCK_EXIST,\t\t/* 블럭 파일 존재여부(0: 없음, 1: 있음) */\n\t\t\t\t\t0 AS BLOCK_FILE_SIZE\t/* 블럭 파일 크기(byte) */\n\t\t\tFROM    (\n\t\t\t\t\t\tSELECT  DISTINCT\n\t\t\t\t\t\t\t\tJBN_DIS,\n\t\t\t\t\t\t\t\tFIG_SHP,\n\t\t\t\t\t\t\t\tITM_COD,\n\t\t\t\t\t\t\t\tACT_COD,\n\t\t\t\t\t\t\t\tOUT_DUR,\n\t\t\t\t\t\t\t\tWRKCNTR_NAME,\n\t\t\t\t\t\t\t\tWRKCNTR,\n\t\t\t\t\t\t\t\tSEQ_NO,\n\t\t\t\t\t\t\t\tJBN_N_X,\n\t\t\t\t\t\t\t\tJBN_N_Y,\n\t\t\t\t\t\t\t\tROT_ANG2,\n\t\t\t\t\t\t\t\tJBN_ST,\n\t\t\t\t\t\t\t\tJBN_FI,\n\t\t\t\t\t\t\t\tUNI_STG,\n\t\t\t\t\t\t\t\tEST_ST_PP,\n\t\t\t\t\t\t\t\tPKG_CPP045_COM.CAL_SIGN_VAL(FIG_SHP, ACT_COD, JBN_FI) AS PLAN_SIGN_VAL,\n\t\t\t\t\t\t\t\tC62A.FN_CPP045_GET_BLOCKTOP(FIG_SHP, ITM_COD) AS BLK_TOP,\n\t\t\t\t\t\t\t\tC62A.FN_CPP045_GET_TRACE(FIG_SHP, ITM_COD) AS BLK_TRACE,\n\t\t\t\t\t\t\t\tC62A.FN_CPP045_GET_PP_PLAN(FIG_SHP, ACT_COD) AS PP_PLAN\n\t\t\t\t\t\tFROM    C62A.APM_RSLT001\n\t\t\t\t\t\tWHERE   JBN_DIS = 'C55000-01'\n\t\t\t\t\t\t\t\tAND (\n\t\t\t\t\t\t\t\t\tJBN_ST IS NULL\n\t\t\t\t\t\t\t\t\tOR    (\n\t\t\t\t\t\t\t\t\t\tJBN_ST <= TO_CHAR(SYSDATE,'YYYYMMDD')\n\t\t\t\t\t\t\t\t\t\tAND    JBN_FI >= TO_CHAR(SYSDATE,'YYYYMMDD')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t) A,\n\t\t\t\t\tC62A.APM_METRIX B,\n\t\t\t\t\tCJ01.TSEN200 C\n\t\t\tWHERE   A.FIG_SHP = B.SHPNO(+)\n\t\t\t\t\tAND A.ITM_COD = B.ITM_COD(+)\n\t\t\t\t\tAND A.ACT_COD = C.ACT_COD(+)\n\t\t\t\t\tAND A.FIG_SHP = C.FIG_SHP(+)\n\t\t\t\t\tAND A.ITM_COD = C.ITM_COD(+) \n\t\t",function(t,_){_.map(function(A,n){var N="".concat(config.localInfo.path,"/").concat(A.FIG_SHP,"_").concat(A.ITM_COD,".zip");T(N,function(T,R){A.BLOCK_EXIST=R?1:0,A.BLOCK_FILE_SIZE=R?S.sync(N):0,_.length==n+1&&D("get",E,t,_)})})})}),t.post("/api/get/summary_info",function(t,E){N("C62A","\n\t\t\tSELECT T_BASE.FACTORY_CD\n\t\t\t, AUTO_DIV_NM      AUTO_DIV\n\t\t\t, DECODE(WKR_CNT, NULL, 0, WKR_CNT)          WORKER_NUMBER\n\t\t\t, DECODE(ARC_CNT, NULL, 0, ARC_CNT) ARC_NUMBER\n\t\t\t, DECODE(T_ACT.TWK_TIME, NULL, 0, T_ACT.TWK_TIME)   WORK_TIME\n\t\t\t, DECODE(T_ACT.ACT_TIME, NULL, 0, T_ACT.ACT_TIME)   ARC_TIME\n\t\t\t, ( \n\t\t\t\tSELECT CASE WHEN COUNT(*) > 0 THEN TO_CHAR(COUNT(*)) ELSE ''END \n\t\t\t\tFROM XJ01.TWEDAS_WELDER_INFO TW\n\t\t\t\tWHERE TW.FACTORY_CD = T_BASE.FACTORY_CD\n\t\t\t  ) WELDING_NUMBER\n\t\t\t, DECODE(ARC_RATE, NULL, 0, ROUND(ARC_RATE, 0))         ARC_PERCENT \n\t\t\tFROM \n\t\t\t(\n\t\t\tSELECT FAC.GUBUN\n\t\t\t, FAC.FACTORY_CD\n\t\t\t, FAC.FACTORY_NM\n\t\t\t, FA.AUTO_DIV\n\t\t\t, FA.AUTO_DIV_NM\n\t\t\tFROM \n\t\t\t( \n\t\t\t\tSELECT ROWNUM GUBUN, FACTORY_CD, FACTORY_NM\n\t\t\t\tFROM XJ01.TWEDAS_FACTORY_INFO   \n\t\t\t\tWHERE FACTORY_CD = 'F100' \n\t\t\t) FAC\n\t\t\tLEFT OUTER JOIN \n\t\t\t(\n\t\t\t\tSELECT DTL_CD AUTO_DIV\n\t\t\t\t, CD_NM  AUTO_DIV_NM\n\t\t\t\tFROM XJ01.TWEDAS_CODE_MST     \n\t\t\t\tWHERE GRP_CD  = 'AUTO' \n\t\t\t\tAND DTL_CD != '*'\n\t\t\t\tAND USE_YN  = 'Y'\n\t\t\t\tUNION ALL\n\t\t\t\tSELECT 'ALL'  AUTO_DIV\n\t\t\t\t, '합계' AUTO_DIV_NM\n\t\t\t\tFROM DUAL \n\t\t\t) FA \n\t\t\t\tON 1=1 \n\t\t\t) T_BASE\n\t\t\tLEFT OUTER JOIN \n\t\t\t( \n\t\t\tSELECT  FACTORY_CD,  AUTO_DIV, WKR_CNT , 0 ARC_CNT\n\t\t\t\t, SUM(WK_TIME) - SUM(NON_ACT_TIME)     TWK_TIME\n\t\t\t\t, SUM(WK_TIME)                          WK_TIME\n\t\t\t\t, SUM(ACT_TIME)                        ACT_TIME\n\t\t\t\t, SUM(NON_ACT_TIME)                NON_ACT_TIME\n\t\t\t\t, XJ01.PKG_CPP043_COM.FUNC_GET_ARC_RATE(SUM(WK_TIME), SUM(NON_ACT_TIME), SUM(ACT_TIME)) ARC_RATE \n\t\t\tFROM \n\t\t\t(\n\t\t\t\tSELECT FACTORY_CD,  NVL(AUTO_DIV, 'TCH') AUTO_DIV, EMP_NO, WORKER_NM\n\t\t\t\t, SUM( CASE WHEN ACT_DIV < '200' THEN ACT_TIME ELSE 0 END ) ACT_TIME\n\t\t\t\t, SUM( CASE WHEN ACT_DIV  = '310' AND NON_WELD_DIV = '910' THEN NULL ELSE WK_TIME END ) WK_TIME\n\t\t\t\t, SUM( CASE WHEN ACT_DIV >= '200' AND ( ACT_DIV = '310' AND NON_WELD_DIV = '910') THEN 0\n\t\t\t\t\t\t\tWHEN ACT_DIV >= '200' THEN ACT_TIME\n\t\t\t\t\t\tELSE 0 \n\t\t\t\t\t\tEND ) NON_ACT_TIME \n\t\t\t\t, COUNT(DISTINCT EMP_NO || WORKER_NM) OVER (PARTITION BY FACTORY_CD,  NVL(AUTO_DIV, 'TCH')) WKR_CNT\n\t\t\t\tFROM XJ01.TWEDAS_ACT T_ACT\n\t\t\t\tWHERE FACTORY_CD = 'F100'\n\t\t\t\tAND DUTY_DIV   = '110'\n\t\t\t\tAND ACT_BEGIN_DT = TO_CHAR(SYSDATE,'YYYYMMDD') \n\t\t\t\tGROUP BY FACTORY_CD,  NVL(AUTO_DIV, 'TCH'), EMP_NO, WORKER_NM\n\t\t\t) T1\n\t\t\tGROUP BY FACTORY_CD,  AUTO_DIV, WKR_CNT\n\t\t\tUNION ALL\n\t\t\tSELECT FACTORY_CD,  'ALL' AUTO_DIV, WKR_CNT\n\t\t\t\t, (\n\t\t\t\tSELECT COUNT(DISTINCT WELDER_ID) ARC_CNT\n\t\t\t\tFROM XJ01.TWEDAS_ACT T_ACT\n\t\t\t\tWHERE FACTORY_CD = 'F100'                                       \n\t\t\t\t\tAND ACT_BEGIN_DT = TO_CHAR(SYSDATE,'YYYYMMDD') \n\t\t\t\tGROUP BY FACTORY_CD\n\t\t\t\t) ARC_CNT\n\t\t\t, SUM(WK_TIME) - SUM(NON_ACT_TIME)     TWK_TIME\n\t\t\t\t, SUM(WK_TIME)                          WK_TIME\n\t\t\t\t, SUM(ACT_TIME)                        ACT_TIME\n\t\t\t\t, SUM(NON_ACT_TIME)                NON_ACT_TIME\n\t\t\t\t, XJ01.PKG_CPP043_COM.FUNC_GET_ARC_RATE(SUM(WK_TIME), SUM(NON_ACT_TIME), SUM(ACT_TIME)) ARC_RATE \n\t\t\tFROM \n\t\t\t( \n\t\t\t\tSELECT FACTORY_CD,  EMP_NO, WORKER_NM\n\t\t\t\t, SUM( CASE WHEN ACT_DIV < '200' THEN ACT_TIME ELSE 0 END ) ACT_TIME\n\t\t\t\t, SUM( CASE WHEN ACT_DIV  = '310' AND NON_WELD_DIV = '910' THEN NULL ELSE WK_TIME END ) WK_TIME\n\t\t\t\t, SUM( CASE WHEN ACT_DIV >= '200' AND ( ACT_DIV = '310' AND NON_WELD_DIV = '910') THEN 0\n\t\t\t\t\t\t\tWHEN ACT_DIV >= '200' THEN ACT_TIME\n\t\t\t\t\t\tELSE 0 \n\t\t\t\t\t\tEND ) NON_ACT_TIME \n\t\t\t\t, COUNT(DISTINCT EMP_NO || WORKER_NM) OVER (PARTITION BY FACTORY_CD) WKR_CNT\n\t\t\t\tFROM XJ01.TWEDAS_ACT T_ACT\n\t\t\t\tWHERE FACTORY_CD = 'F100'\n\t\t\t\tAND DUTY_DIV   = '110'\n\t\t\t\tAND ACT_BEGIN_DT = TO_CHAR(SYSDATE,'YYYYMMDD') \n\t\t\t\tGROUP BY FACTORY_CD,  EMP_NO, WORKER_NM\n\t\t\t) T1\n\t\t\tGROUP BY FACTORY_CD,  WKR_CNT    \n\t\t\t) T_ACT \n\t\t\tON T_BASE.FACTORY_CD = T_ACT.FACTORY_CD\n\t\t\tAND T_BASE.AUTO_DIV   = T_ACT.AUTO_DIV\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/crane_latest_result",function(t,E){N("C62A","\n\t\t\tSELECT\tA.WORK_YM,\n\t\t\t\t\tSUBSTR(A.WORK_YM, 5, 2) || '월' AS WORK_M,\n\t\t\t\t\tDECODE(B.WORK_PLAN, NULL, 0, B.WORK_PLAN) AS WORK_PLAN,\n\t\t\t\t\tDECODE(C.WORK_RESULT, NULL, 0, C.WORK_RESULT) AS WORK_RESULT,\n\t\t\t\t\tDECODE(ROUND(C.WORK_RESULT * 100 / B.WORK_PLAN, 0), NULL, 0, ROUND(C.WORK_RESULT * 100 / B.WORK_PLAN, 0)) AS WORK_RATIO\n\t\t\tFROM\t(\n\t\t\t\t\t\tSELECT\tTO_CHAR(SYSDATE, 'YYYY') || LPAD(LEVEL, 2, '0') AS WORK_YM\n\t\t\t\t\t\tFROM\tDUAL\n\t\t\t\t\t\tCONNECT\tBY LEVEL >= 1\n\t\t\t\t\t\t\t\tAND LEVEL <= TO_CHAR(SYSDATE, 'MM')\n\t\t\t\t\t) A\n\t\t\tLEFT\tOUTER JOIN (\n\t\t\t\t\t\tSELECT\tSUBSTR(WORK_DAT, 1, 6) AS WORK_YM,\n\t\t\t\t\t\t\t\tSUM(NVL(BLK_WGT, 0)) AS WORK_PLAN\n\t\t\t\t\t\tFROM\tAPM_CRAN004\n\t\t\t\t\t\tWHERE\tSUBSTR(WORK_DAT, 1, 6) = TO_CHAR(SYSDATE, 'YYYYMM')\n\t\t\t\t\t\tGROUP\tBY SUBSTR(WORK_DAT, 1, 6)\n\t\t\t\t\t) B\n\t\t\t\t\tON A.WORK_YM = B.WORK_YM\n\t\t\tLEFT\tOUTER JOIN (\n\t\t\t\t\t\tSELECT\tSUBSTR(WORK_DAT, 1, 6) AS WORK_YM,\n\t\t\t\t\t\t\t\tSUM(NVL(BLK_WGT, 0)) AS WORK_RESULT\n\t\t\t\t\t\tFROM\tAPM_CRAN004\n\t\t\t\t\t\tWHERE\tSUBSTR(WORK_DAT, 1, 6) = TO_CHAR(SYSDATE, 'YYYYMM')\n\t\t\t\t\t\t\t\tAND WORK_YN = 'Y'\n\t\t\t\t\t\tGROUP\tBY SUBSTR(WORK_DAT, 1, 6)\n\t\t\t\t\t) C\n\t\t\t\t\tON A.WORK_YM = C.WORK_YM\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/crane_result",function(t,E){N("C62A","\n\t\t\tSELECT\tA.WORK_YM AS WORK_RAW_YM,\n\t\t\t\t\tSUBSTR(A.WORK_YM, 1, 4) || '.' || SUBSTR(A.WORK_YM, 5, 2) AS WORK_YM,\n\t\t\t\t\tSUBSTR(A.WORK_YM, 5, 2) || '월' AS WORK_M,\n\t\t\t\t\tDECODE(B.WORK_PLAN, NULL, 0, B.WORK_PLAN) AS WORK_PLAN,\n\t\t\t\t\tDECODE(C.WORK_RESULT, NULL, 0, C.WORK_RESULT) AS WORK_RESULT,\n\t\t\t\t\tDECODE(ROUND(C.WORK_RESULT * 100 / B.WORK_PLAN, 0), NULL, 0, ROUND(C.WORK_RESULT * 100 / B.WORK_PLAN, 0)) AS WORK_RATIO\n\t\t\tFROM\t(\n\t\t\t\t\t\tSELECT\tTO_CHAR(SYSDATE, 'YYYY') || LPAD(LEVEL, 2, '0') AS WORK_YM\n\t\t\t\t\t\tFROM\tDUAL\n\t\t\t\t\t\tCONNECT\tBY LEVEL >= 1\n\t\t\t\t\t\t\t\tAND LEVEL <= 12\n\t\t\t\t\t) A\n\t\t\tLEFT\tOUTER JOIN (\n\t\t\t\t\t\tSELECT\tSUBSTR(WORK_DAT, 1, 6) AS WORK_YM,\n\t\t\t\t\t\t\t\tSUM(NVL(BLK_WGT, 0)) AS WORK_PLAN\n\t\t\t\t\t\tFROM\tAPM_CRAN004\n\t\t\t\t\t\tWHERE\tSUBSTR(WORK_DAT, 1, 6) = TO_CHAR(SYSDATE, 'YYYYMM')\n\t\t\t\t\t\tGROUP\tBY SUBSTR(WORK_DAT, 1, 6)\n\t\t\t\t\t) B\n\t\t\t\t\tON A.WORK_YM = B.WORK_YM\n\t\t\tLEFT\tOUTER JOIN (\n\t\t\t\t\t\tSELECT\tSUBSTR(WORK_DAT, 1, 6) AS WORK_YM,\n\t\t\t\t\t\t\t\tSUM(NVL(BLK_WGT, 0)) AS WORK_RESULT\n\t\t\t\t\t\tFROM\tAPM_CRAN004\n\t\t\t\t\t\tWHERE\tSUBSTR(WORK_DAT, 1, 6) = TO_CHAR(SYSDATE, 'YYYYMM')\n\t\t\t\t\t\t\t\tAND WORK_YN = 'Y'\n\t\t\t\t\t\tGROUP\tBY SUBSTR(WORK_DAT, 1, 6)\n\t\t\t\t\t) C\n\t\t\t\t\tON A.WORK_YM = C.WORK_YM\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/crane_result_grid",function(t,E){N("C62A","\n\t\t\tSELECT SRT, GBN,\n\t\t\t\t\tCASE WHEN SRT = '3' AND NVL(PLN_01, 0) > 100 THEN 100 ELSE DECODE(PLN_01, NULL, 0, PLN_01) END AS VAL_1,\n\t\t\t\t\tCASE WHEN SRT = '3' AND NVL(PLN_02, 0) > 100 THEN 100 ELSE DECODE(PLN_02, NULL, 0, PLN_02) END AS VAL_2,\n\t\t\t\t\tCASE WHEN SRT = '3' AND NVL(PLN_03, 0) > 100 THEN 100 ELSE DECODE(PLN_03, NULL, 0, PLN_03) END AS VAL_3,\n\t\t\t\t\tCASE WHEN SRT = '3' AND NVL(PLN_04, 0) > 100 THEN 100 ELSE DECODE(PLN_04, NULL, 0, PLN_04) END AS VAL_4,\n\t\t\t\t\tCASE WHEN SRT = '3' AND NVL(PLN_05, 0) > 100 THEN 100 ELSE DECODE(PLN_05, NULL, 0, PLN_05) END AS VAL_5,\n\t\t\t\t\tCASE WHEN SRT = '3' AND NVL(PLN_06, 0) > 100 THEN 100 ELSE DECODE(PLN_06, NULL, 0, PLN_06) END AS VAL_6,\n\t\t\t\t\tCASE WHEN SRT = '3' AND NVL(PLN_07, 0) > 100 THEN 100 ELSE DECODE(PLN_07, NULL, 0, PLN_07) END AS VAL_7,\n\t\t\t\t    CASE WHEN SRT = '3' AND NVL(PLN_08, 0) > 100 THEN 100 ELSE DECODE(PLN_08, NULL, 0, PLN_08) END AS VAL_8,\n                    CASE WHEN SRT = '3' AND NVL(PLN_09, 0) > 100 THEN 100 ELSE DECODE(PLN_09, NULL, 0, PLN_09) END AS VAL_9,\n                    CASE WHEN SRT = '3' AND NVL(PLN_10, 0) > 100 THEN 100 ELSE DECODE(PLN_10, NULL, 0, PLN_10) END AS VAL_10,\n                    CASE WHEN SRT = '3' AND NVL(PLN_11, 0) > 100 THEN 100 ELSE DECODE(PLN_11, NULL, 0, PLN_11) END AS VAL_11,\n                    CASE WHEN SRT = '3' AND NVL(PLN_11, 0) > 100 THEN 100 ELSE DECODE(PLN_12, NULL, 0, PLN_12) END AS VAL_12\n\t\t\tFROM (SELECT '1' AS SRT, \n\t\t\t\t\t\t\t'계획(Ton)' AS GBN,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '01' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_01,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '02' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_02,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '03' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_03,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '04' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_04,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '05' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_05,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '06' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_06,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '07' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_07,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '08' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_08,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '09' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_09,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '10' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_10,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '11' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_11,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '12' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_12\n\t\t\t\t\tFROM APM_CRAN004\n\t\t\t\t\tWHERE WORK_DAT LIKE '2019%'   -- 년월\n\t\t\t--                       AND BAY_DIV LIKE IN_BAY_DIV||'%' -- BAY\n\t\t\t--                       AND CRAN_NO LIKE IN_CRAN_NO||'%' -- 크레인\n\t\t\t\t\tUNION ALL   \n\t\t\t\t\tSELECT '2' AS SRT, \n\t\t\t\t\t\t\t'실적(Ton)' AS GBN,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '01' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_01,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '02' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_02,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '03' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_03,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '04' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_04,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '05' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_05,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '06' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_06,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '07' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_07,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '08' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_08,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '09' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_09,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '10' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_10,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '11' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_11,\n\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '12' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) AS PLN_12\n\t\t\t\t\tFROM APM_CRAN004\n\t\t\t\t\tWHERE WORK_DAT LIKE '2019%'    -- 년월\n\t\t\t--                       AND BAY_DIV LIKE IN_BAY_DIV||'%'  -- BAY\n\t\t\t--                       AND CRAN_NO LIKE IN_CRAN_NO||'%'  -- 크레인 \n\t\t\t\t\tUNION ALL   \n\t\t\t\t\tSELECT '3' AS SRT, \n\t\t\t\t\t\t\t'가동율(%)' AS GBN,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '01' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '01' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '01' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_01,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '02' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '02' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '02' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_02,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '03' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '03' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '03' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_03,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '04' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '04' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '04' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_04,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '05' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '05' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '05' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_05,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '06' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '06' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '06' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_06,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '07' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '07' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '07' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_07,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '08' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '08' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '08' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_08,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '09' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '09' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '09' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_09,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '10' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '10' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '10' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_10,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '11' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '11' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '11' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_11,\n\t\t\t\t\t\t\tCASE WHEN SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '12' THEN NVL(BLK_WGT, 0) ELSE 0 END) > 0 THEN\n\t\t\t\t\t\t\t\tROUND((SUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '12' AND WORK_YN = 'Y' THEN NVL(BLK_WGT, 0) ELSE 0 END) / \n\t\t\t\t\t\t\t\t\t\tSUM(CASE WHEN SUBSTR(WORK_DAT, 5, 2) = '12' THEN NVL(BLK_WGT, 0) ELSE 0 END) * 100), 0)\n\t\t\t\t\t\t\tELSE NULL END AS  PLN_12\n\t\t\t\t\tFROM APM_CRAN004\n\t\t\t\t\tWHERE WORK_DAT LIKE '2019%')      -- 년월\n\t\t\t/*                       AND BAY_DIV LIKE IN_BAY_DIV||'%'    -- BAY */\n\t\t\t/*\t\t\t\t\tAND CRAN_NO LIKE IN_CRAN_NO||'%' )  -- 크레인 */\n\t\t\tORDER BY SRT\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/crane_work_type",function(t,E){N("C62A","\n\t\t\tSELECT COD_DESC_SHRT AS RET_DESC,\n\t\t\t\t\tRET_COT,\n\t\t\t\t\tTO_CHAR(ROUND(RET_COT / RET_TOT * 100, 1)) AS RET_PER\n\t\t\tFROM (SELECT T1.WORK_DIV, T2.COD_DESC_SHRT, \n\t\t\t\t\t\t\tSUM(1) AS RET_COT,\n\t\t\t\t\t\t\t(SELECT COUNT(*) FROM APM_CRAN004\n\t\t\t\t\t\t\tWHERE WORK_DAT LIKE '2019%'    -- 년월\n\t\t\t/*                               AND BAY_DIV LIKE IN_BAY_DIV||'%'  -- BAY */\n\t\t\t/*                               AND CRAN_NO LIKE IN_CRAN_NO||'%'  -- 크레인 */\n\t\t\t\t\t\t\t\tAND WORK_DIV > ' ') AS RET_TOT\n\t\t\t\t\tFROM APM_CRAN004 T1,\n\t\t\t\t\t\t\t(SELECT CRNT_COD, COD_DESC_SHRT\n\t\t\t\t\t\t\tFROM T62ACODE\n\t\t\t\t\t\t\tWHERE PRNT_COD = 'CR1') T2\n\t\t\t\t\tWHERE T1.WORK_DAT LIKE '2019%'     -- 년월\n\t\t\t/*                       AND T1.BAY_DIV LIKE IN_BAY_DIV||'%'   -- BAY */\n\t\t\t/*                       AND T1.CRAN_NO LIKE IN_CRAN_NO||'%'   -- 크레인 */\n\t\t\t\t\t\tAND T1.WORK_DIV = T2.CRNT_COD(+)\n\t\t\t\t\t\tAND T1.WORK_DIV > ' '\n\t\t\t\t\tGROUP BY T1.WORK_DIV, T2.COD_DESC_SHRT )\n\t\t\tORDER BY WORK_DIV\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/get/install_block_info",function(t,E){var _="\n\t\t\tSELECT\tX.SHPNO,\t\t\t/* 호선번호 */\n\t\t\t\t\tX.ITM_COD,\t\t\t/* 블록번호 */\n\t\t\t\t\tX.BLK_TYP,\t\t\t/* Type */\n\t\t\t\t\tX.BLK_SIZE,\t\t\t/* Size */\n\t\t\t\t\tX.BLK_NET_WGT,\t\t/* 중량 */\n\t\t\t\t\tY.WRK_DAT,\t\t\t/* 탑재일 */\n\t\t\t\t\tDECODE(Y.WRK_DAT, NULL, NULL, SUBSTR(Y.WRK_DAT, 1, 4) || '.' || SUBSTR(Y.WRK_DAT, 5, 2) || '.' || SUBSTR(Y.WRK_DAT, 7, 2)) AS WRK_DAT_YMD\t/* 투입일 */\n\t\t\tFROM\t(\n\t\t\t\t\t\tSELECT\t*\n\t\t\t\t\t\tFROM\tOPT.V_DIVISION\n\t\t\t\t\t\tWHERE\tSHPNO = '".concat(t.body.shipNo,"'\t\t\t/* Parameter 호선번호 */\n\t\t\t\t\t\t\t\tAND PARENT_ID = '").concat(t.body.blockNo,"'\t/* Parameter 블록번호 */\n\t\t\t\t\t\t\t\tAND SUBSTR (ITM_COD, 6, 1) IS NULL\n\t\t\t\t\t\tUNION\tALL\n\t\t\t\t\t\tSELECT\t*\n\t\t\t\t\t\tFROM\tOPT.V_DIVISION\n\t\t\t\t\t\tWHERE\tSHPNO = '").concat(t.body.shipNo,"'\t\t\t/* Parameter 호선번호 */\n\t\t\t\t\t\t\t\tAND PARENT_ID IN (\n\t\t\t\t\t\t\t\t\tSELECT\tITM_COD\n\t\t\t\t\t\t\t\t\tFROM\tOPT.V_DIVISION\n\t\t\t\t\t\t\t\t\tWHERE\tSHPNO = '").concat(t.body.shipNo,"'\t\t\t/* Parameter 호선번호 */\n\t\t\t\t\t\t\t\t\t\t\tAND PARENT_ID = '").concat(t.body.blockNo,"'\t/* Parameter 블록번호 */\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t) X\n\t\t\tLEFT\tOUTER JOIN APM_CRAN012 Y\n\t\t\t\t\tON Y.FIG_SHP = X.SHPNO\n\t\t\t\t\tAND Y.ITM_COD = X.ITM_COD\n\t\t");N("C62A",_,function(t,_){D("get",E,t,_)})}),t.post("/api/get/input_material_info",function(t,E){var _="\n\t\t\tSELECT\tSHPNO,\t\t/* 호선 */\n\t\t\t\t\tLOTNO,\t\t/* LOT No. */\n\t\t\t\t\tBLK_NO,\t\t/* 블록 */\n\t\t\t\t\tSTAGE,\t\t/* 조립 */\n\t\t\t\t\tPE_STAGE,\t/* PE */\n\t\t\t\t\tSUB,\t\t/* 소조기호 */\n\t\t\t\t\tPART_NO,\t/* 부재기호 */\n\t\t\t\t\tLH_CODE,\t/* L-H */\n\t\t\t\t\tASTR,\t\t/* 송선 */\n\t\t\t\t\tPROC_SYS,\t/* 계열 */\n\t\t\t\t\tGRADE,\t\t/* 재질 */\n\t\t\t\t\tLENG1,\t\t/* 길이(m) */\n\t\t\t\t\tLENG2,\t\t/* 폭(m) */\n\t\t\t\t\tTHK,\t\t/* 두께(mm) */\n\t\t\t\t\tWGT,\t\t/* 총 중량(Kg) */\n\t\t\t\t\tTAKEDATE,\t/* 투입일 */\n\t\t\t\t\tDECODE(TAKEDATE, NULL, NULL, SUBSTR(TAKEDATE, 1, 4) || '.' || SUBSTR(TAKEDATE, 5, 2) || '.' || SUBSTR(TAKEDATE, 7, 2)) AS TAKEDATE_YMD\t/* 투입일 */\n\t\t\tFROM\tT62AW0040\n\t\t\tWHERE\tWRKTYP <> 'XX'\n\t\t\t\t\tAND SHPNO = '".concat(t.body.shipNo,"'\t\t/* Parameter 호선번호 */\n\t\t\t\t\tAND (\n\t\t\t\t\t\tA_BLOCK = '").concat(t.body.blockNo,"'\t\t/* Parameter 블록번호 */\n\t\t\t\t\t\tOR U_BLOCK = '").concat(t.body.blockNo,"'\t/* Parameter 블록번호 */\n\t\t\t\t\t)\n\t\t");N("C62A",_,function(t,_){D("get",E,t,_)})}),t.post("/api/get/test",function(t,E){N("C62A","\n\t\t\tSELECT\t*\n\t\t\tFROM\tAPM_BASE011\n\t\t",function(t,_){D("get",E,t,_)})}),t.post("/api/set/new_test",function(t,E){var _=t.body.col1,T=t.body.col2,S="\n\t\t\tINSERT\tINTO TEST20181024\n\t\t\t\t\t(\n\t\t\t\t\t\tN1,\n\t\t\t\t\t\tN2,\n\t\t\t\t\t\tN3,\n\t\t\t\t\t\tN4,\n\t\t\t\t\t\tN5,\n\t\t\t\t\t\tN6,\n\t\t\t\t\t\tREG_DTE\n\t\t\t\t\t)\n\t\t\tVALUES\t(\n\t\t\t\t\t\t".concat(_,",\n\t\t\t\t\t\t").concat(T,",\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t'20190101'\n\t\t\t\t\t)\n\t\t");N("C62A",S,function(t,_){D("set",E,t,_)})});var N=function(t,E,_){switch(t){case"C62A":config.dbInfo1;break;case"CJ01":config.dbInfo2;break;case"ERPUSER":config.dbInfo3}},D=function(t,E,_,T){try{switch(t){case"get":return _?Object.keys(T).length>0?E.end(JSON.stringify({status:200,result:"success",message:"조회하였습니다.",data:T})):E.end(JSON.stringify({status:204,result:"nothing",message:"조회된 내용이 없습니다.",data:T})):E.end(JSON.stringify({status:500,result:"error",message:"조회에 실패하였습니다.",data:T}));case"set":return _?E.end(JSON.stringify({status:200,result:"success",message:"실행하였습니다.",data:T})):E.end(JSON.stringify({status:500,result:"error",message:"실행에 실패하였습니다.",data:T}))}}catch(t){console.log(t)}}}},function(t,E){t.exports=require("file-exists")},function(t,E){t.exports=require("file-bytes")},function(t,E){t.exports=require("socket.io-client")}]);